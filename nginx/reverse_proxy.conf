upstream cvs_mtls_backends {
    server sit1sdkservices-2wayssl.caremark.com:443;
}

upstream cvs_backends {
    server sit1sdkservices.caremark.com:443;
}

server {
    listen 8090; # ssl;
    keepalive_timeout 70;

    access_log /usr/local/var/log/nginx/proxy_access.log upstream_logging;

    resolver 127.0.0.1 8.8.8.8;
    resolver_timeout 10s;

    # server_name         partner-cvs-nonprod.cloverhealth.com;
    # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    # ssl_ciphers         ES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
    # ssl_certificate     /usr/local/etc/nginx/certs/partner-cvs-nonprod_cloverhealth_com.crt;
    # ssl_certificate_key /usr/local/etc/nginx/certs/server-rsa.key;
    # ssl_session_cache   shared:SSL:10m;
    # ssl_session_timeout 10m;

    #charset koi8-r;
    # location /member {
    #     rewrite ^/member/?(.*)?$ /$1 break;
    #     proxy_pass http://member_backends/$1;
    # }
    location /login {
        # rewrite ^/cvs/?(.*)?$ /$1 break;
        proxy_pass https://cvs_mtls_backends;

        # No URL error if not set
        proxy_set_header Host sit1sdkservices-2wayssl.caremark.com;
        proxy_pass_request_headers on;

        proxy_ssl_certificate /usr/local/etc/nginx/certs/partner-cvs-nonprod_cloverhealth_com.crt;
        proxy_ssl_certificate_key /usr/local/etc/nginx/certs/server-rsa.key;

        # cannot verify yet: [error] 87873#0: *1 upstream SSL certificate does not match "cvs_mtls_backends" while SSL handshaking to upstream
        # proxy_ssl_trusted_certificate /usr/local/etc/nginx/certs/sit1-2waysslservices.caremark.com.pem;
        # proxy_ssl_verify on;
        # proxy_ssl_verify_depth 3;

        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    location / {
        # rewrite ^/cvs/?(.*)?$ /$1 break;
        proxy_pass https://cvs_backends;

        # No URL error if not set
        proxy_set_header Host sit1sdkservices.caremark.com;
        proxy_pass_request_headers on;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root html;
    # }
}